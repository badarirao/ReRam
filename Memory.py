# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Memory_3.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_Memory(object):
    def setupUi(self, Memory):
        Memory.setObjectName("Memory")
        Memory.resize(800, 650)
        Memory.setMinimumSize(QtCore.QSize(0, 0))
        Memory.setMaximumSize(QtCore.QSize(15000, 15000))
        self.centralwidget = QtWidgets.QWidget(Memory)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.comment_checkBox = QtWidgets.QCheckBox(self.centralwidget)
        self.comment_checkBox.setObjectName("comment_checkBox")
        self.verticalLayout.addWidget(self.comment_checkBox)
        self.commentBox = QtWidgets.QTextEdit(self.centralwidget)
        self.commentBox.setEnabled(False)
        self.commentBox.setObjectName("commentBox")
        self.verticalLayout.addWidget(self.commentBox)
        self.gridLayout_2.addLayout(self.verticalLayout, 0, 0, 2, 1)
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setMinimumSize(QtCore.QSize(0, 65))
        self.frame.setMaximumSize(QtCore.QSize(16777215, 100))
        self.frame.setObjectName("frame")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.frame)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.inst_button = QtWidgets.QPushButton(self.frame)
        self.inst_button.setMinimumSize(QtCore.QSize(0, 50))
        self.inst_button.setStyleSheet("background-color: #daa3b8;\n"
"font: 75 12pt \"Times New Roman\";")
        self.inst_button.setObjectName("inst_button")
        self.horizontalLayout_2.addWidget(self.inst_button)
        self.dir_Button = QtWidgets.QPushButton(self.frame)
        self.dir_Button.setMinimumSize(QtCore.QSize(0, 50))
        self.dir_Button.setStyleSheet("background-color: #A3C1Da;\n"
"font: 75 12pt \"Times New Roman\";")
        self.dir_Button.setObjectName("dir_Button")
        self.horizontalLayout_2.addWidget(self.dir_Button)
        self.gridLayout_2.addWidget(self.frame, 0, 1, 1, 1)
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setMinimumSize(QtCore.QSize(0, 70))
        self.frame_2.setMaximumSize(QtCore.QSize(16777215, 100))
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.filename_label = QtWidgets.QLabel(self.frame_2)
        self.filename_label.setMaximumSize(QtCore.QSize(16777215, 100))
        self.filename_label.setObjectName("filename_label")
        self.horizontalLayout.addWidget(self.filename_label)
        self.filename = QtWidgets.QLineEdit(self.frame_2)
        self.filename.setStyleSheet("font: 13pt \"Times New Roman\";")
        self.filename.setAlignment(QtCore.Qt.AlignCenter)
        self.filename.setObjectName("filename")
        self.horizontalLayout.addWidget(self.filename)
        self.gridLayout_2.addWidget(self.frame_2, 1, 1, 1, 1)
        self.experimentBox = QtWidgets.QGroupBox(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.experimentBox.setFont(font)
        self.experimentBox.setStyleSheet("font: 20pt \"Times New Roman\" ;")
        self.experimentBox.setAlignment(QtCore.Qt.AlignCenter)
        self.experimentBox.setObjectName("experimentBox")
        self.gridLayout = QtWidgets.QGridLayout(self.experimentBox)
        self.gridLayout.setObjectName("gridLayout")
        self.iv_button = QtWidgets.QPushButton(self.experimentBox)
        self.iv_button.setMinimumSize(QtCore.QSize(170, 50))
        self.iv_button.setStyleSheet("font: 12pt \"Times New Roman\";")
        self.iv_button.setObjectName("iv_button")
        self.gridLayout.addWidget(self.iv_button, 0, 0, 1, 1)
        self.rv_button = QtWidgets.QPushButton(self.experimentBox)
        self.rv_button.setMinimumSize(QtCore.QSize(170, 50))
        self.rv_button.setStyleSheet("font: 12pt \"Times New Roman\";")
        self.rv_button.setObjectName("rv_button")
        self.gridLayout.addWidget(self.rv_button, 0, 1, 1, 1)
        self.switch_button = QtWidgets.QPushButton(self.experimentBox)
        self.switch_button.setMinimumSize(QtCore.QSize(170, 50))
        self.switch_button.setStyleSheet("font: 12pt \"Times New Roman\";")
        self.switch_button.setObjectName("switch_button")
        self.gridLayout.addWidget(self.switch_button, 0, 2, 1, 1)
        self.speed_button = QtWidgets.QPushButton(self.experimentBox)
        self.speed_button.setMinimumSize(QtCore.QSize(170, 50))
        self.speed_button.setStyleSheet("font: 12pt \"Times New Roman\";")
        self.speed_button.setObjectName("speed_button")
        self.gridLayout.addWidget(self.speed_button, 1, 2, 1, 1)
        self.forming_button = QtWidgets.QPushButton(self.experimentBox)
        self.forming_button.setMinimumSize(QtCore.QSize(170, 50))
        self.forming_button.setStyleSheet("font: 12pt \"Times New Roman\";")
        self.forming_button.setObjectName("forming_button")
        self.gridLayout.addWidget(self.forming_button, 2, 0, 1, 1)
        self.retention_button = QtWidgets.QPushButton(self.experimentBox)
        self.retention_button.setMinimumSize(QtCore.QSize(170, 50))
        self.retention_button.setStyleSheet("font: 12pt \"Times New Roman\";")
        self.retention_button.setObjectName("retention_button")
        self.gridLayout.addWidget(self.retention_button, 1, 1, 1, 1)
        self.endurance_button = QtWidgets.QPushButton(self.experimentBox)
        self.endurance_button.setMinimumSize(QtCore.QSize(170, 50))
        self.endurance_button.setStyleSheet("font: 12pt \"Times New Roman\";")
        self.endurance_button.setObjectName("endurance_button")
        self.gridLayout.addWidget(self.endurance_button, 1, 0, 1, 1)
        self.memristor_button = QtWidgets.QPushButton(self.experimentBox)
        self.memristor_button.setMinimumSize(QtCore.QSize(170, 50))
        self.memristor_button.setStyleSheet("font: 12pt \"Times New Roman\";")
        self.memristor_button.setObjectName("memristor_button")
        self.gridLayout.addWidget(self.memristor_button, 2, 2, 1, 1)
        self.aging_button = QtWidgets.QPushButton(self.experimentBox)
        self.aging_button.setMinimumSize(QtCore.QSize(170, 50))
        self.aging_button.setStyleSheet("font: 12pt \"Times New Roman\";")
        self.aging_button.setObjectName("aging_button")
        self.gridLayout.addWidget(self.aging_button, 2, 1, 1, 1)
        self.temperature_button = QtWidgets.QPushButton(self.experimentBox)
        self.temperature_button.setMinimumSize(QtCore.QSize(170, 50))
        self.temperature_button.setStyleSheet("font: 12pt \"Times New Roman\";")
        self.temperature_button.setObjectName("temperature_button")
        self.gridLayout.addWidget(self.temperature_button, 3, 0, 1, 1)
        self.neuromorphic_Button = QtWidgets.QPushButton(self.experimentBox)
        self.neuromorphic_Button.setMinimumSize(QtCore.QSize(170, 50))
        self.neuromorphic_Button.setStyleSheet("font: 12pt \"Times New Roman\";")
        self.neuromorphic_Button.setObjectName("neuromorphic_Button")
        self.gridLayout.addWidget(self.neuromorphic_Button, 3, 1, 1, 1)
        self.batch_button = QtWidgets.QPushButton(self.experimentBox)
        self.batch_button.setMinimumSize(QtCore.QSize(170, 50))
        self.batch_button.setStyleSheet("font: 12pt \"Times New Roman\";")
        self.batch_button.setObjectName("batch_button")
        self.gridLayout.addWidget(self.batch_button, 3, 2, 1, 1)
        self.gridLayout_2.addWidget(self.experimentBox, 2, 0, 1, 2)
        Memory.setCentralWidget(self.centralwidget)
        self.menuBar = QtWidgets.QMenuBar(Memory)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 560, 21))
        self.menuBar.setObjectName("menuBar")
        self.menuOptions = QtWidgets.QMenu(self.menuBar)
        self.menuOptions.setObjectName("menuOptions")
        Memory.setMenuBar(self.menuBar)
        self.statusBar = QtWidgets.QStatusBar(Memory)
        self.statusBar.setObjectName("statusBar")
        Memory.setStatusBar(self.statusBar)
        self.actionSet_2_wire_configuration = QtWidgets.QAction(Memory)
        self.actionSet_2_wire_configuration.setObjectName("actionSet_2_wire_configuration")
        self.actionSet_4_wire_configuration = QtWidgets.QAction(Memory)
        self.actionSet_4_wire_configuration.setObjectName("actionSet_4_wire_configuration")
        self.actionTemperature_Setting = QtWidgets.QAction(Memory)
        self.actionTemperature_Setting.setObjectName("actionTemperature_Setting")
        self.actionSearch_Instruments = QtWidgets.QAction(Memory)
        self.actionSearch_Instruments.setObjectName("actionSearch_Instruments")
        self.actionSelect_Instruments = QtWidgets.QAction(Memory)
        self.actionSelect_Instruments.setObjectName("actionSelect_Instruments")
        self.actionOpen = QtWidgets.QAction(Memory)
        self.actionOpen.setObjectName("actionOpen")
        self.menuOptions.addAction(self.actionSet_2_wire_configuration)
        self.menuOptions.addAction(self.actionSet_4_wire_configuration)
        self.menuOptions.addSeparator()
        self.menuOptions.addAction(self.actionTemperature_Setting)
        self.menuOptions.addSeparator()
        self.menuOptions.addAction(self.actionSearch_Instruments)
        self.menuOptions.addAction(self.actionSelect_Instruments)
        self.menuBar.addAction(self.menuOptions.menuAction())

        self.retranslateUi(Memory)
        QtCore.QMetaObject.connectSlotsByName(Memory)
        Memory.setTabOrder(self.comment_checkBox, self.commentBox)
        Memory.setTabOrder(self.commentBox, self.iv_button)
        Memory.setTabOrder(self.iv_button, self.rv_button)
        Memory.setTabOrder(self.rv_button, self.switch_button)
        Memory.setTabOrder(self.switch_button, self.endurance_button)
        Memory.setTabOrder(self.endurance_button, self.retention_button)
        Memory.setTabOrder(self.retention_button, self.speed_button)
        Memory.setTabOrder(self.speed_button, self.forming_button)
        Memory.setTabOrder(self.forming_button, self.aging_button)
        Memory.setTabOrder(self.aging_button, self.memristor_button)
        Memory.setTabOrder(self.memristor_button, self.temperature_button)
        Memory.setTabOrder(self.temperature_button, self.neuromorphic_Button)
        Memory.setTabOrder(self.neuromorphic_Button, self.batch_button)

    def retranslateUi(self, Memory):
        _translate = QtCore.QCoreApplication.translate
        Memory.setWindowTitle(_translate("Memory", "ReRam"))
        self.comment_checkBox.setText(_translate("Memory", "Add Comments"))
        self.commentBox.setToolTip(_translate("Memory", "<html><head/><body><p>Comments entered here will be copied to all experiments\' data file.</p></body></html>"))
        self.commentBox.setHtml(_translate("Memory", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Sample details:</p></body></html>"))
        self.inst_button.setText(_translate("Memory", "Reconnect Instrument"))
        self.dir_Button.setText(_translate("Memory", "Select Directory"))
        self.filename_label.setText(_translate("Memory", "<html><head/><body><p align=\"center\"><span style=\" font-size:12pt; font-weight:600; color:#5500ff;\">Sample ID</span></p></body></html>"))
        self.filename.setToolTip(_translate("Memory", "<html><head/><body><p>Enter sample ID. All the experiments will have this ID as prefix in the filename.</p></body></html>"))
        self.filename.setText(_translate("Memory", "Sample"))
        self.experimentBox.setTitle(_translate("Memory", "Select Experiment"))
        self.iv_button.setToolTip(_translate("Memory", "<html><head/><body><p>Perform Current Vs Voltage measurement</p></body></html>"))
        self.iv_button.setText(_translate("Memory", "IV-Loop"))
        self.rv_button.setToolTip(_translate("Memory", "<html><head/><body><p>Perform write voltage vs Resistance at read voltage for cyclic write voltages.</p></body></html>"))
        self.rv_button.setText(_translate("Memory", "Resistive Switching Loop"))
        self.switch_button.setToolTip(_translate("Memory", "<html><head/><body><p>Apply set and reset voltage pulses and check its resistance</p></body></html>"))
        self.switch_button.setText(_translate("Memory", "Switching Test"))
        self.speed_button.setToolTip(_translate("Memory", "<html><head/><body><p>Access the minimum pulse-width essential for particular write voltage to cause switching</p></body></html>"))
        self.speed_button.setText(_translate("Memory", "Switching Speed"))
        self.forming_button.setToolTip(_translate("Memory", "<html><head/><body><p>This program incremently applies voltage with controlled limiting current to help the sample exhibit good resistive switching.</p></body></html>"))
        self.forming_button.setText(_translate("Memory", "Auto Forming"))
        self.retention_button.setToolTip(_translate("Memory", "<html><head/><body><p>Check the stability of the set and reset states to read voltage for long time durations.</p></body></html>"))
        self.retention_button.setText(_translate("Memory", "Retention Test"))
        self.endurance_button.setToolTip(_translate("Memory", "<html><head/><body><p>Perform set and reset operations several times and check the stability of the resistive states.</p><p>(Fatigue testing)</p></body></html>"))
        self.endurance_button.setText(_translate("Memory", "Endurance Test"))
        self.memristor_button.setToolTip(_translate("Memory", "<html><head/><body><p>Check the suitability of the device as analogue memory, which is needed for neuromorphic computation</p></body></html>"))
        self.memristor_button.setText(_translate("Memory", "Memristor Test"))
        self.aging_button.setToolTip(_translate("Memory", "<html><head/><body><p>Compare the stability of set and reset states after several days.</p></body></html>"))
        self.aging_button.setText(_translate("Memory", "Aging Test"))
        self.temperature_button.setToolTip(_translate("Memory", "<html><head/><body><p>Check the variation of set and reset resistances with changing temperature.</p></body></html>"))
        self.temperature_button.setText(_translate("Memory", "Temperature \n"
"Dependence"))
        self.neuromorphic_Button.setText(_translate("Memory", "Neuromorphic"))
        self.batch_button.setToolTip(_translate("Memory", "<html><head/><body><p>An automation program intended to carry out several of the above tests automatically in a pre-determined order.</p></body></html>"))
        self.batch_button.setText(_translate("Memory", "Batch Program"))
        self.menuOptions.setTitle(_translate("Memory", "Options"))
        self.actionSet_2_wire_configuration.setText(_translate("Memory", "Set 2-wire configuration"))
        self.actionSet_4_wire_configuration.setText(_translate("Memory", "Set 4-wire configuration"))
        self.actionTemperature_Setting.setText(_translate("Memory", "Temperature Setting"))
        self.actionSearch_Instruments.setText(_translate("Memory", "Search Instruments"))
        self.actionSelect_Instruments.setText(_translate("Memory", "Select Instruments"))
        self.actionOpen.setText(_translate("Memory", "Open"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Memory = QtWidgets.QMainWindow()
    ui = Ui_Memory()
    ui.setupUi(Memory)
    Memory.show()
    sys.exit(app.exec_())

